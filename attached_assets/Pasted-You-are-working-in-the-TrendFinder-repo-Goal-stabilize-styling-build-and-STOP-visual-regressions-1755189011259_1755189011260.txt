You are working in the TrendFinder repo. Goal: stabilize styling & build and STOP visual regressions.

STRICT RULES
- DO NOT change colors, spacing, components, or layouts.
- DO NOT re-style components. This is infra-only.
- Only fix config, imports, missing tokens, and obvious runtime errors (e.g., missing imports).

## 0) Create a safety branch & snapshot
bash -lc '
git status
git checkout -b ui-stabilize-tailwind-v3-LOCK
'

## 1) Pin Tailwind to v3.4.x everywhere (no v4)
bash -lc '
npm pkg set devDependencies.tailwindcss=3.4.10
npm pkg set devDependencies.postcss=8.4.41
npm pkg set devDependencies.autoprefixer=10.4.20
npm i
'

## 2) PostCSS config â†’ classic plugin (no @tailwindcss/postcss)
Apply this exact file at repo root:
--- postcss.config.cjs ---
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
};
--- END FILE ---

## 3) Tailwind config: include ui-v2 globs & map shadcn tokens
If tailwind config is TypeScript, use .ts; otherwise .js. Create/overwrite with:

--- tailwind.config.ts ---
import type { Config } from "tailwindcss";
import animate from "tailwindcss-animate";

export default {
  darkMode: ["class"],
  content: [
    "./index.html",
    "./src/**/*.{ts,tsx,js,jsx}",
    "./client/src/**/*.{ts,tsx,js,jsx}",
    "./src/ui-v2/**/*.{ts,tsx,js,jsx}"
  ],
  theme: {
    extend: {
      colors: {
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        primary: {
          DEFAULT: "hsl(var(--primary))",
          foreground: "hsl(var(--primary-foreground))",
        },
        secondary: {
          DEFAULT: "hsl(var(--secondary))",
          foreground: "hsl(var(--secondary-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        accent: {
          DEFAULT: "hsl(var(--accent))",
          foreground: "hsl(var(--accent-foreground))",
        },
        destructive: {
          DEFAULT: "hsl(var(--destructive))",
          foreground: "hsl(var(--destructive-foreground))",
        },
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },
      },
      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)",
      },
      keyframes: {
        "accordion-down": {
          from: { height: "0" },
          to: { height: "var(--radix-accordion-content-height)" },
        },
        "accordion-up": {
          from: { height: "var(--radix-accordion-content-height)" },
          to: { height: "0" },
        },
      },
      animation: {
        "accordion-down": "accordion-down 0.2s ease-out",
        "accordion-up": "accordion-up 0.2s ease-out",
      },
    },
  },
  plugins: [animate],
} satisfies Config;
--- END FILE ---

## 4) Global CSS: ensure tokens + tailwind directives load FIRST
We will use ONE global file to host the shadcn token bridge. If your project uses client/src/index.css, keep it. Otherwise use src/index.css. Create/overwrite at the main web entry path that is imported by main.tsx:

--- src/index.css ---
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Shadcn token bridge (NO visual changes, just variables) */
:root {
  --background: 240 6% 6%;
  --foreground: 0 0% 98%;
  --card: 240 6% 8%;
  --card-foreground: 0 0% 98%;
  --popover: 240 6% 8%;
  --popover-foreground: 0 0% 98%;
  --primary: 220 90% 56%;
  --primary-foreground: 0 0% 100%;
  --secondary: 240 4.8% 16%;
  --secondary-foreground: 0 0% 98%;
  --muted: 240 4.8% 16%;
  --muted-foreground: 240 5% 64%;
  --accent: 240 4.8% 16%;
  --accent-foreground: 0 0% 98%;
  --destructive: 0 72% 51%;
  --destructive-foreground: 0 0% 98%;
  --border: 240 5% 20%;
  --input: 240 5% 16%;
  --ring: 220 90% 56%;
  --radius: 0.75rem;
}

/* Optional dark alias; keep same for dark-first apps */
.dark {}

@layer base {
  * { @apply border-border; }
  body { @apply bg-background text-foreground; }
}
--- END FILE ---

## 5) UI-V2 CSS: must import AFTER global
Open the ui-v2 css (src/ui-v2/index.css). If it contains @tailwind directives, REMOVE them. It should ONLY contain ui-v2 local additions. Keep existing content but ensure it DOES NOT re-declare @tailwind. If it was missing, create:

--- src/ui-v2/index.css ---
/* ui-v2 local styles (NO @tailwind here). Keep any existing utility-based classes in JSX, not @apply with arbitrary opacity. */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

.ui-v2 {
  font-family: ui-sans-serif, -apple-system, "SF Pro Display", "SF Pro Text", Inter, system-ui, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
--- END FILE ---

## 6) Ensure correct import order in entry
Find your web entry (e.g., src/main.tsx OR client/src/main.tsx). Import global CSS FIRST, then ui-v2 CSS:

// top of file
import "./index.css";
import "./ui-v2/index.css";

## 7) Install and wire tiny utility for classNames (fixes 'clsx is not defined')
bash -lc '
npm i -S clsx tailwind-merge
'
Create util:
--- src/lib/cn.ts ---
import { clsx } from "clsx";
import { twMerge } from "tailwind-merge";
export function cn(...inputs: any[]) {
  return twMerge(clsx(inputs));
}
--- END FILE ---
Search components that use clsx/twMerge directly and update imports to use { cn } if missing.

## 8) Remove v4-only patterns that break Tailwind v3
- Search for "@apply bg-*-*/**" inside CSS files. Tailwind v3 is picky with arbitrary opacity in @apply.
bash -lc '
grep -R --line-number "@apply .*\/" src || true
'
For each hit in CSS, replace the @apply usage with JSX classNames (leave visuals unchanged). Example: replace
  .glass { @apply bg-white/5 backdrop-blur; }
with keeping the className on the element: className="bg-white/5 backdrop-blur"
(NO visual change; just move from CSS to markup).

## 9) Verify design tokens are recognized
bash -lc '
node -e "console.log(\"tailwind:\", require(\"tailwindcss/package.json\").version)"
grep -n \"@tailwind base\" src/index.css || true
grep -R -n \"border-border\" src | head || true
'

## 10) Build + run smoke
bash -lc '
npm run build || true
npm run dev >/dev/null 2>&1 & sleep 3; curl -sSf http://localhost:5173 >/dev/null && echo \"Dev server OK\" || echo \"Dev server FAIL\"
'

## 11) Commit
bash -lc "
git add -A
git commit -m 'chore(ui): lock Tailwind v3.4, restore shadcn tokens, fix import order, keep design unchanged'
"